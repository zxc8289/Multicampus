/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.56
 * Generated at: 2022-01-20 02:31:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Document</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"style.css\">\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css?family=Nanum+Gothic+Coding|Noto+Sans+KR|Roboto&display=swap\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("* {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	font-family: 'Baskervville', serif;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("	min-height: 100vh;\r\n");
      out.write("	background-image: linear-gradient(120deg, #bdc3c7, #ecf0f1, #bdc3c7);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a {\r\n");
      out.write("	font-size: 15px;\r\n");
      out.write("	color: cornflowerblue;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login-form {\r\n");
      out.write("	width: 360px;\r\n");
      out.write("	background: white;\r\n");
      out.write("	height: 580px;\r\n");
      out.write("	padding: 80px 40px;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	left: 50%;\r\n");
      out.write("	top: 50%;\r\n");
      out.write("	transform: translate(-50%, -50%);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login-form h1 {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	margin-bottom: 60px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".txtb {\r\n");
      out.write("	border-bottom: 2px solid #adadad;\r\n");
      out.write("	position: relative;\r\n");
      out.write("	margin: 30px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".txtb input {\r\n");
      out.write("	font-size: 15px;\r\n");
      out.write("	color: #333;\r\n");
      out.write("	border: none;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	outline: none;\r\n");
      out.write("	background: none;\r\n");
      out.write("	padding: 0 5px;\r\n");
      out.write("	height: 40px;\r\n");
      out.write("	font-family: 'Roboto', sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".txtb span::before {\r\n");
      out.write("	content: attr(data-placeholer);\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	top: 50%;\r\n");
      out.write("	left: 5px;\r\n");
      out.write("	color: #adadad;\r\n");
      out.write("	transform: translateY(-50%);\r\n");
      out.write("	left: 5px;\r\n");
      out.write("	transition: .5s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".txtb span::after {\r\n");
      out.write("	content: '';\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	width: 0%;\r\n");
      out.write("	height: 2px;\r\n");
      out.write("	background: linear-gradient(120deg, #95a5a6, #bdc3c7);\r\n");
      out.write("	transition: .5s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".focus+span::before {\r\n");
      out.write("	top: -5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".focus+span::before {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".logbtn {\r\n");
      out.write("	display: block;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 50px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	background: linear-gradient(120deg, #bdc3c7, #95a5a6, #bdc3c7);\r\n");
      out.write("	background-size: 200%;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	outline: none;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	transition: .5s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".logbtn:hover {\r\n");
      out.write("	background-position: right;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".button-text {\r\n");
      out.write("	margin-top: 60px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	font-size: 13px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".up {\r\n");
      out.write("	font-family: 'Roboto', sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".down {\r\n");
      out.write("	font-family: 'Roboto', sans-serif;\r\n");
      out.write("	color: gray;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("span {\r\n");
      out.write("	font-family: 'Roboto', sans-serif;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<form action=\"loginAf.do\" method=\"post\" class=\"login-form\">\r\n");
      out.write("		<h1 >Login</h1>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"txtb\">\r\n");
      out.write("			<input type=\"text\" id=\"id\" name=\"id\"> <span data-placeholer=\"Username\"></span>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"txtb\">\r\n");
      out.write("			<input type=\"password\" name=\"pwd\" id=\"pwd\"> <span data-placeholer=\"Password\"></span>\r\n");
      out.write("		</div>\r\n");
      out.write("		<input type=\"submit\" class=\"logbtn\" value=\"Login\"\r\n");
      out.write("			style=\"font-family: 'Roboto', sans-serif;\" style=\"font-size: 15px;\">\r\n");
      out.write("\r\n");
      out.write("		<div class=\"button-text\">\r\n");
      out.write("			<h3 class=\"up\" style=\"color: rgb(75, 73, 73);\">Don't have\r\n");
      out.write("				account?</h3>\r\n");
      out.write("			<br> <a href=\"regi.do\" class=\"up\">회원가입</a><br>\r\n");
      out.write("			<br> <br>\r\n");
      out.write("			<a href=\"main.html\" class=\"down\">Return</a>\r\n");
      out.write("		</div>\r\n");
      out.write("	</form>\r\n");
      out.write("\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		$(\".txtb input\").on(\"focus\", function() {\r\n");
      out.write("			$(this).addClass(\"focus\");\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		$(\".txtb input\").on(\"blur\", function() {\r\n");
      out.write("			if ($(this).val() == \"\")\r\n");
      out.write("				$(this).removeClass(\"focus\");\r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
